// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'pages/about_page.dart';
import 'pages/login_page.dart';
import 'pages/main_page.dart';
import 'pages/scan_qrcode_page.dart';
import 'pages/settings_page.dart';
import 'widgets/in_app_webview.dart';

// ignore_for_file: argument_type_not_assignable
RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case 'openjmu-lite://about':
      return RouteResult(
        widget: AboutPage(),
        routeName: '关于页',
      );
    case 'openjmu-lite://inappbrowser':
      return RouteResult(
        widget: InAppBrowserPage(
          url: arguments['url'],
          title: arguments['title'],
          app: arguments['app'],
          withCookie: arguments['withCookie'],
          withAppBar: arguments['withAppBar'],
          withAction: arguments['withAction'],
          withScaffold: arguments['withScaffold'],
          keepAlive: arguments['keepAlive'],
        ),
        routeName: '网页浏览',
      );
    case 'openjmu-lite://login-page':
      return RouteResult(
        widget: LoginPage(),
        routeName: '登录页',
      );
    case 'openjmu-lite://main-page':
      return RouteResult(
        widget: MainPage(),
        routeName: '首页',
      );
    case 'openjmu-lite://scan-qrcode':
      return RouteResult(
        widget: ScanQrCodePage(),
        routeName: '扫描二维码',
      );
    case 'openjmu-lite://settings-page':
      return RouteResult(
        widget: SettingsPage(),
        routeName: '设置页',
      );
    default:
      return const RouteResult();
  }
}

class RouteResult {
  const RouteResult({
    this.widget,
    this.showStatusBar = true,
    this.routeName = '',
    this.pageRouteType,
    this.description = '',
    this.exts,
  });

  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  /// The extend arguments
  final Map<String, dynamic> exts;
}

enum PageRouteType {
  material,
  cupertino,
  transparent,
}
